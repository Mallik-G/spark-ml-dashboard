{"paragraphs":[{"text":"%spark.pyspark\n\nfrom pyspark.sql import DataFrame\nfrom pyspark.ml import *    ","dateUpdated":"2016-12-31T17:24:30+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483152108209_-1400604579","id":"20161231-024148_1037434963","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-12-31T02:41:48+0000","dateStarted":"2016-12-31T17:24:17+0000","dateFinished":"2016-12-31T17:24:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:991","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483210393356_-1404059088","id":"20161231-185313_1975190697","dateCreated":"2016-12-31T18:53:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3142","text":"print(\"%html <h1>Load Training and Test Data as DataSets</h1>\")","dateUpdated":"2016-12-31T18:55:39+0000","dateFinished":"2016-12-31T18:55:40+0000","dateStarted":"2016-12-31T18:55:39+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Load Training and Test Data as DataSets</h1>"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483203803004_-465959347","id":"20161231-170323_352688296","dateCreated":"2016-12-31T17:03:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1964","text":"import org.apache.spark.sql.types._\nimport org.apache.spark.sql.Row\nimport spark.implicits._\nimport org.apache.spark.sql.Dataset\n\ndef load(path: String): Dataset[Row] = {\n    var docs = sc.wholeTextFiles(path).cache()\n\n    // convert docs which is tuple2 RDD into Row RDD\n    var rowRDD = docs.map(x =>{\n        var t = x._1.split(\"/\")\n        var id = t(t.size-1)\n        var topic = t(t.size-2)\n        var label = if (topic.startsWith(\"sci\")) 1.0 else 0.0\n        Row(id, topic, label, x._2)\n        })\n    \n    // Schema generation\n    val schemaString = \"id:String topic:String label:Double text:String\"\n    val fields = schemaString.split(\" \").map(fieldName => {\n            var nameAndType = fieldName.split(\":\")\n            var fieldType = if (nameAndType(1).equals(\"Double\")) DoubleType else StringType\n            StructField(nameAndType(0), fieldType, nullable = true)\n        })\n    val schema = StructType(fields)\n    \n    // convert Row RDD into DataSet\n    return sqlContext.createDataFrame(rowRDD, schema).cache()\n}\n\nvar training = load(\"/tmp/20news-bydate/20news-bydate-train/*/\")\nvar test = load(\"/tmp/20news-bydate/20news-bydate-test/*/\")","dateUpdated":"2016-12-31T18:53:03+0000","dateFinished":"2016-12-31T17:43:26+0000","dateStarted":"2016-12-31T17:43:23+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.sql.types._\n\nimport org.apache.spark.sql.Row\n\nimport spark.implicits._\n\nimport org.apache.spark.sql.Dataset\n\npreprocess: (path: String)org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\n\ntraining: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: string, topic: string ... 2 more fields]\n\ntest: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: string, topic: string ... 2 more fields]\n"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483210557588_-1863050846","id":"20161231-185557_1849176262","dateCreated":"2016-12-31T18:55:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3970","text":"print(\"%html <h1> Print some counts/stats for Training and Test Data</h1>\")","dateUpdated":"2016-12-31T18:56:36+0000","dateFinished":"2016-12-31T18:56:37+0000","dateStarted":"2016-12-31T18:56:36+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h1> Print some counts/stats for Training and Test Data</h1>"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483203946285_-1812966891","id":"20161231-170546_477317730","dateCreated":"2016-12-31T17:05:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2040","text":"println(\"Total Training Docs: \" + training.count())\nprintln(\"Total Test Docs: \" + test.count())\ntraining.groupBy(\"topic\").count().show()\ntraining.groupBy(\"label\").count().show()\ntraining.groupBy(\"topic\").count().show()\ntest.groupBy(\"label\").count().show()","dateUpdated":"2016-12-31T17:43:34+0000","dateFinished":"2016-12-31T17:46:10+0000","dateStarted":"2016-12-31T17:43:34+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"Total Training Docs: 11314\nTotal Test Docs: 7532\n+--------------------+-----+\n|               topic|count|\n+--------------------+-----+\n|      comp.windows.x|  593|\n|        misc.forsale|  585|\n|    rec.sport.hockey|  600|\n|  rec.sport.baseball|  597|\n|  talk.politics.guns|  546|\n|comp.os.ms-window...|  591|\n|  talk.politics.misc|  465|\n|comp.sys.ibm.pc.h...|  590|\n|       comp.graphics|  584|\n|soc.religion.chri...|  599|\n|comp.sys.mac.hard...|  578|\n|  talk.religion.misc|  377|\n|talk.politics.mid...|  564|\n|     rec.motorcycles|  598|\n|           rec.autos|  594|\n|         alt.atheism|  480|\n|     sci.electronics|  591|\n|           sci.space|  593|\n|             sci.med|  594|\n|           sci.crypt|  595|\n+--------------------+-----+\n\n+-----+-----+\n|label|count|\n+-----+-----+\n|  0.0| 8941|\n|  1.0| 2373|\n+-----+-----+\n\n+--------------------+-----+\n|               topic|count|\n+--------------------+-----+\n|      comp.windows.x|  593|\n|        misc.forsale|  585|\n|    rec.sport.hockey|  600|\n|  rec.sport.baseball|  597|\n|  talk.politics.guns|  546|\n|comp.os.ms-window...|  591|\n|  talk.politics.misc|  465|\n|comp.sys.ibm.pc.h...|  590|\n|       comp.graphics|  584|\n|soc.religion.chri...|  599|\n|comp.sys.mac.hard...|  578|\n|  talk.religion.misc|  377|\n|talk.politics.mid...|  564|\n|     rec.motorcycles|  598|\n|           rec.autos|  594|\n|         alt.atheism|  480|\n|     sci.electronics|  591|\n|           sci.space|  593|\n|             sci.med|  594|\n|           sci.crypt|  595|\n+--------------------+-----+\n\n+-----+-----+\n|label|count|\n+-----+-----+\n|  0.0| 5953|\n|  1.0| 1579|\n+-----+-----+\n\n"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483210620172_-1229292787","id":"20161231-185700_1988673502","dateCreated":"2016-12-31T18:57:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4404","text":"print(\"%html <h1>Create Pipeline with a Tokenizer, HashingTF and LogisticRegression </h1>\")","dateUpdated":"2016-12-31T18:57:57+0000","dateFinished":"2016-12-31T18:57:57+0000","dateStarted":"2016-12-31T18:57:57+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Create Pipeline with a Tokenizer, HashingTF and LogisticRegression </h1>"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483203610159_-567761275","id":"20161231-170010_1750591172","dateCreated":"2016-12-31T17:00:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1880","dateUpdated":"2016-12-31T17:54:48+0000","dateFinished":"2016-12-31T17:54:52+0000","dateStarted":"2016-12-31T17:54:48+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.ml.feature.RegexTokenizer\n\ntokenizer: org.apache.spark.ml.feature.RegexTokenizer = regexTok_985214648065\n\nimport org.apache.spark.ml.feature.HashingTF\n\nhashingTF: org.apache.spark.ml.feature.HashingTF = hashingTF_032058860953\n\nimport org.apache.spark.ml.classification.LogisticRegression\n\nlr: org.apache.spark.ml.classification.LogisticRegression = logreg_ad0aaefedc15\n\nimport org.apache.spark.ml.Pipeline\n\npipeline: org.apache.spark.ml.Pipeline = pipeline_971460ee3309\n\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\n\nevaluator: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_605a07b94a0a\n\nimport org.apache.spark.ml.param.ParamMap\n\n\n\n\nevaluatorParams: org.apache.spark.ml.param.ParamMap =\n{\n\tbinEval_605a07b94a0a-metricName: areaUnderROC\n}\n"},"text":"import org.apache.spark.ml.feature.RegexTokenizer\nval tokenizer = new RegexTokenizer()\n  .setInputCol(\"text\")\n  .setOutputCol(\"words\")\n  .setPattern(\"\\\\s+\")\n\nimport org.apache.spark.ml.feature.HashingTF\nval hashingTF = new HashingTF()\n  .setInputCol(tokenizer.getOutputCol)  // it does not wire transformers -- it's just a column name\n  .setOutputCol(\"features\")\n  .setNumFeatures(5000)\n \nimport org.apache.spark.ml.classification.LogisticRegression\nval lr = new LogisticRegression().setMaxIter(20).setRegParam(0.01)\n\nimport org.apache.spark.ml.Pipeline\nval pipeline = new Pipeline().setStages(Array(tokenizer, hashingTF, lr))\n\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\nval evaluator = new BinaryClassificationEvaluator().setMetricName(\"areaUnderROC\")\n\nimport org.apache.spark.ml.param.ParamMap\nval evaluatorParams = ParamMap(evaluator.metricName -> \"areaUnderROC\")\n"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483210687614_51675864","id":"20161231-185807_1850117452","dateCreated":"2016-12-31T18:58:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4826","text":"print(\"%html <h1>Fit Model and check AreaUnderROC</h1>\")","dateUpdated":"2016-12-31T18:58:38+0000","dateFinished":"2016-12-31T18:58:39+0000","dateStarted":"2016-12-31T18:58:38+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Fit Model and check AreaUnderROC</h1>"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483205982755_1839398578","id":"20161231-173942_114320073","dateCreated":"2016-12-31T17:39:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2347","dateUpdated":"2016-12-31T17:54:57+0000","dateFinished":"2016-12-31T17:55:07+0000","dateStarted":"2016-12-31T17:54:57+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"\nmodel: org.apache.spark.ml.PipelineModel = pipeline_971460ee3309\n\ntrainPredictions: org.apache.spark.sql.DataFrame = [id: string, topic: string ... 7 more fields]\n\ntestPredictions: org.apache.spark.sql.DataFrame = [id: string, topic: string ... 7 more fields]\n\nareaTrain: Double = 0.9998885798755743\n\nareaTest: Double = 0.9048976322548505\n"},"text":"val model = pipeline.fit(training)\nval trainPredictions = model.transform(training)\nval testPredictions = model.transform(test)\nval areaTrain = evaluator.evaluate(trainPredictions, evaluatorParams)\nval areaTest = evaluator.evaluate(testPredictions, evaluatorParams)\n"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483210723970_-2108273813","id":"20161231-185843_1070912397","dateCreated":"2016-12-31T18:58:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5266","text":"print(\"%html <h1>Now, let's try k-fold</h1>\")","dateUpdated":"2016-12-31T18:59:17+0000","dateFinished":"2016-12-31T18:59:18+0000","dateStarted":"2016-12-31T18:59:17+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Now, let's try k-fold</h1>"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483206683451_-969791951","id":"20161231-175123_1254250725","dateCreated":"2016-12-31T17:51:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2486","dateUpdated":"2016-12-31T17:59:36+0000","dateFinished":"2016-12-31T18:01:00+0000","dateStarted":"2016-12-31T17:59:36+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.ml.tuning.ParamGridBuilder\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nparamGrid: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\tlogreg_ad0aaefedc15-maxIter: 5,\n\thashingTF_032058860953-numFeatures: 1000,\n\tlogreg_ad0aaefedc15-regParam: 0.05\n}, {\n\tlogreg_ad0aaefedc15-maxIter: 5,\n\thashingTF_032058860953-numFeatures: 1000,\n\tlogreg_ad0aaefedc15-regParam: 0.2\n}, {\n\tlogreg_ad0aaefedc15-maxIter: 10,\n\thashingTF_032058860953-numFeatures: 1000,\n\tlogreg_ad0aaefedc15-regParam: 0.05\n}, {\n\tlogreg_ad0aaefedc15-maxIter: 10,\n\thashingTF_032058860953-numFeatures: 1000,\n\tlogreg_ad0aaefedc15-regParam: 0.2\n}, {\n\tlogreg_ad0aaefedc15-maxIter: 15,\n\thashingTF_032058860953-numFeatures: 1000,\n\tlogreg_ad0aaefedc15-regParam: 0.05\n}, {\n\tlogreg_ad0aaefedc15-maxIter: 15,\n\thashingTF_032058860953-numFeatures: 1000,\n\tlogreg_ad0aaefedc15-regParam: 0.2\n}, {\n\tlogreg_ad0aaefedc15-maxIter: 5...\nimport org.apache.spark.ml.tuning.CrossValidator\n\nimport org.apache.spark.ml.param._\n\ncv: org.apache.spark.ml.tuning.CrossValidator = cv_34dad208314a\n\ncvModel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_34dad208314a\n"},"text":"import org.apache.spark.ml.tuning.ParamGridBuilder\nval paramGrid = new ParamGridBuilder()\n  .addGrid(hashingTF.numFeatures, Array(1000, 10000))\n  .addGrid(lr.regParam, Array(0.05, 0.2))\n  .addGrid(lr.maxIter, Array(5, 10, 15))\n  .build\n  \nimport org.apache.spark.ml.tuning.CrossValidator\nimport org.apache.spark.ml.param._\nval cv = new CrossValidator()\n  .setEstimator(pipeline)\n  .setEstimatorParamMaps(paramGrid)\n  .setEvaluator(evaluator)\n  .setNumFolds(2)\n\nval cvModel = cv.fit(training)"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483210769151_-1544970251","id":"20161231-185929_159153150","dateCreated":"2016-12-31T18:59:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5709","text":"print(\"%html <h1>Calculate AreaUnderROC for test data with K-Fold</h1>\")","dateUpdated":"2016-12-31T19:00:11+0000","dateFinished":"2016-12-31T19:00:11+0000","dateStarted":"2016-12-31T19:00:11+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Calculate AreaUnderROC for test data with K-Fold</h1>"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483207152241_429798666","id":"20161231-175912_279234146","dateCreated":"2016-12-31T17:59:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2582","dateUpdated":"2016-12-31T18:08:58+0000","dateFinished":"2016-12-31T18:09:00+0000","dateStarted":"2016-12-31T18:08:58+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"\nres150: Double = 0.9296967048295749\n"},"text":"evaluator.evaluate(cvModel.transform(test))"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483210818206_-53790784","id":"20161231-190018_1547659922","dateCreated":"2016-12-31T19:00:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6146","text":"print(\"%html <h1>Save Predictions and Model</h1>\")","dateUpdated":"2016-12-31T19:01:35+0000","dateFinished":"2016-12-31T19:01:36+0000","dateStarted":"2016-12-31T19:01:35+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Save Predictions and Model</h1>"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483207738148_-2017917997","id":"20161231-180858_1703015781","dateCreated":"2016-12-31T18:08:58+0000","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2737","dateUpdated":"2016-12-31T19:33:16+0000","dateFinished":"2016-12-31T19:09:23+0000","dateStarted":"2016-12-31T19:09:21+0000","result":{"code":"ERROR","type":"TEXT","msg":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\norg.apache.spark.sql.AnalysisException: path s3://20news-bydate-predictions1.json already exists.;\n  at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:88)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:58)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:56)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.doExecute(commands.scala:74)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:115)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:115)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:136)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:133)\n  at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:114)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:86)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:86)\n  at org.apache.spark.sql.execution.datasources.DataSource.write(DataSource.scala:525)\n  at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:211)\n  at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:194)\n  at org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:467)\n  ... 96 elided\n"},"text":"cvModel.transform(test).select(\"id\", \"prediction\").write.json(\"s3://20news-bydate-predictions1.json\")"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483208005663_-1615118192","id":"20161231-181325_1223305741","dateCreated":"2016-12-31T18:13:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2822","dateUpdated":"2016-12-31T19:19:54+0000","dateFinished":"2016-12-31T19:19:57+0000","dateStarted":"2016-12-31T19:19:55+0000","result":{"code":"SUCCESS","type":"TEXT","msg":""},"text":"cvModel.write.overwrite.save(\"/tmp/model\")"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483208869870_207112775","id":"20161231-182749_1687965120","dateCreated":"2016-12-31T18:27:49+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2957","dateUpdated":"2016-12-31T18:28:11+0000","errorMessage":"","text":""}],"name":"20news-bydate classification","id":"2C5BJAXSQ","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}